---
# We need sudo for some of the Docker commands.
sudo: required

env:
  # Provide a list of OSes we want to use for testing.
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: debian8
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

before_install:
  # Pull container from Docker Hub.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  # Start the container from the image and perform tests.

  # Create a random file to store the container ID.
  - container_id=$(mktemp)

  # Run container detached, with our role mounted inside.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/ansible-role-papertrail:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Check the role/playbook's syntax.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook -vvv /etc/ansible/roles/ansible-role-papertrail/tests/test.yml
    --syntax-check

  # Run the role/playbook with ansible-playbook.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook -vvv /etc/ansible/roles/ansible-role-papertrail/tests/test.yml

  # Run the role/playbook again, checking to make sure it's idempotent.
  - idempotence=$(mktemp)
  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook -vvv /etc/ansible/roles/ansible-role-papertrail/tests/test.yml
    | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Ensure remote_syslog is installed.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm which remote_syslog'

  # Stat files.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm stat /etc/log_files.yml /etc/ssl/certs/papertrail-bundle.pem /etc/rsyslog.d/papertrail.conf /usr/local/bin/remote_syslog'

  # Ensure rsyslog.service is running.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm systemctl -l status rsyslog'

  # Ensure remote_syslog.service is running.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm systemctl -l is-enabled remote_syslog'

  # Rough test of /etc/log_files.yml content
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm grep "  host: fake_host"       /etc/log_files.yml'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm grep "  port: 11111"           /etc/log_files.yml'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm grep "  - /var/log/cron"       /etc/log_files.yml'
